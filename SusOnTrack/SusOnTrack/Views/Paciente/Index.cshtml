@model SusOnTrack.Models.PacienteListagemModel
@using System.Collections.Generic
@{
    Layout = "~/Views/Shared/_LayoutPaciente.cshtml";
    ViewBag.Title = "Listagem de Pacientes";
}
@section styles{

    @Styles.Render("~/Content/css")



}
@section scripts{

    @Scripts.Render("~/bundles/jsPopular")

    <script src="~/Scripts/jquery.dataTables.js"></script>
    <script src="~/Scripts/jquery.dataTables.min.js"></script>

}

@Html.HiddenFor(Model => Model.IdPesquisa, new { @id = "id" })
<div>
    @* Title Here *@

    <header class="row justify-content-center">
        <h1>@ViewBag.Title</h1>
    </header>
    @* Content Here
        Ideias de Conteúdo:
        1:Número de Pacientes em fila de espera
        2:Número de Vacinas disponíveis
        3:Número de Postos na sua região( dentro de uma distancia específica)
    *@
    <section class="grid">
        <div class="row">
            <div class="col-md">
                <div class="form-group">
                    <label for="iExample"> Teste de Botão </label>
                    <input class="form-control" type="button" value="Teste" id="idExample" />
                </div>
            </div>

            @{
                Dictionary<long, string> itens = new Dictionary<Int64, String>();
                List<SelectListItem> select = new List<SelectListItem>();
                itens.Add(1, "Número de Pacientes em fila de espera para tomar vacinas");
                itens.Add(2, "Solicitação de informações de determinado paciente");


                foreach (var item in itens)
                {
                    select.Add(new SelectListItem { Text = item.Value, Value = Convert.ToString(item.Key) });
                }
                //select[0].Selected = true;
            }
            <div class="col-md">
                <div class="form-group">
                    @Html.DropDownListFor(Model => Model.IdPesquisa, select, "Selecione", new { @Id = "idSelect", @class = "form-control select", @autocomplete = "off" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md">

                <input type="button" id="iCadastro" class="form-control" value="Cadastrar" />
            </div>
        </div>

        <div class="row">
            <div class="col-md mt-3">
                <input type="button" id="iExcluir" class="form-control" value="Excluir" />
            </div>
        </div>
    </section>
    <div class="row mt-3">
        <div class="col-md-4">

            <textarea id="iAreaRequisicoes" class="form-control" rows="6"></textarea>
        </div>
        @*<table id="iTable">
            </table>*@
    </div>

</div>
@section Local_Js{
    <script type="module" id="iModule">
        let module = await import("https://localhost:44352/SUS/Scripts/teste.js")
            .then(variables => {

                window.URLPORTAL = variables["URLPORTAL"];
                return variables["URLPORTAL"];

            });
    </script>

    <script type="text/javascript">

        const doc = document,
            Exemplo = doc.querySelector("#idExample"),
            URLPORTAL = window.URLPORTAL,
            Select = doc.querySelector("#idSelect"),
            cadastro = doc.querySelector("#iCadastro"),
            excluir = doc.querySelector("#iExcluir");

        excluir.addEventListener("click", () => {
            let destinoUrl = "@Url.Action("Delete","Paciente")";
            window.location.href = destinoUrl;
        });
        cadastro.addEventListener("click", () => {
            let destinoUrl = "@Url.Action("Cadastro","Paciente")";
            window.location.href = destinoUrl;
        });
        Select.addEventListener("change",
            /**
             * evento para determinar option selecionada
             * @@param event{number}
             */
            async function (event) {
                let valorEscolhido = event.target.value,
                    arrayDescriptions = event.target.textContent.split('\n').filter(p => { return p; }),
                    item = arrayDescriptions[valorEscolhido];

                if (item == undefined) {

                    item = arrayDescriptions[0];

                }

                await requestFromValue(valorEscolhido);
            });
        async function requestFromValue(value = '') {

            let valor = value == '' ? 0 : value
            await $.post({
                url: `${window.URLPORTAL}api/PacienteApi/GetAccessInfo?number=${valor}`,
                data: { number: valor }

            })
                .done(function (data = "") {

                    doc.querySelector("#iAreaRequisicoes").textContent = "";
                    doc.querySelector("#iAreaRequisicoes").textContent = JSON.stringify(data);

                })
                .fail(data => { });
        }
    </script>
}


